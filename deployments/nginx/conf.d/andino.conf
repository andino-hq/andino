server {
    listen 80;
    listen [::]:80;
    server_name andino.local api.andino.local localhost;

    # Redirect HTTP to HTTPS in production
    # Uncomment the next line for production
    # return 301 https://$server_name$request_uri;

    # For development, serve directly
    location / {
        proxy_pass http://andino_backend;
        include /etc/nginx/proxy_params;
    }
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name andino.local api.andino.local localhost;

    # SSL configuration
    ssl_certificate /etc/nginx/ssl/nginx-selfsigned.crt;
    ssl_private_key /etc/nginx/ssl/nginx-selfsigned.key;
    
    # Modern SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_stapling on;
    ssl_stapling_verify on;

    # Security headers for API
    add_header Strict-Transport-Security "max-age=63072000" always;
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;

    # API routes with rate limiting
    location /api/ {
        limit_req zone=api burst=20 nodelay;
        
        proxy_pass http://andino_backend;
        include /etc/nginx/proxy_params;
        
        # API specific headers
        add_header X-API-Version "1.0.0" always;
    }

    # Auth endpoints with stricter rate limiting
    location ~ ^/api/v1/(login|register|auth) {
        limit_req zone=login burst=5 nodelay;
        
        proxy_pass http://andino_backend;
        include /etc/nginx/proxy_params;
    }

    # Health check (no rate limiting)
    location /health {
        proxy_pass http://andino_backend;
        include /etc/nginx/proxy_params;
        access_log off;
    }

    # Static files (if any)
    location /static/ {
        alias /usr/share/nginx/html/static/;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # Root endpoint
    location = / {
        proxy_pass http://andino_backend;
        include /etc/nginx/proxy_params;
    }

    # Block access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Custom error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        root /usr/share/nginx/html;
        internal;
    }
    
    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }
}

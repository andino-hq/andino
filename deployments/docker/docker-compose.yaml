services:
  andino:
    build:
      context: ../../
      dockerfile: deployments/docker/Dockerfile
      args:
        VERSION: ${VERSION:-dev}
        COMMIT_SHA: ${COMMIT_SHA:-unknown}
        BUILD_DATE: ${BUILD_DATE:-unknown}
    container_name: andino
    restart: unless-stopped
    ports:
      - "${SERVER_PORT:-8080}:8080"
    environment:
      - ENV=docker
      - DEBUG=${DEBUG:-false}
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=8080
      - SERVER_READ_TIMEOUT=${SERVER_READ_TIMEOUT:-30s}
      - SERVER_WRITE_TIMEOUT=${SERVER_WRITE_TIMEOUT:-30s}
      - DATABASE_DRIVER=postgres
      - DATABASE_DSN=postgresql://andino:${POSTGRES_PASSWORD:-andino123}@postgres:5432/${POSTGRES_DB:-andino}?sslmode=disable
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
      - REDIS_DB=${REDIS_DB:-0}
      - LOGGING_LEVEL=${LOGGING_LEVEL:-info}
      - LOGGING_FORMAT=json
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key-change-this-in-production}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN:-24h}
      - SII_BASE_URL=${SII_BASE_URL:-https://palena.sii.cl}
      - SII_TEST_URL=${SII_TEST_URL:-https://maullin.sii.cl}
      - SII_ENVIRONMENT=${SII_ENVIRONMENT:-testing}
      - TRANSBANK_ENVIRONMENT=${TRANSBANK_ENVIRONMENT:-integration}
      - TRANSBANK_API_KEY=${TRANSBANK_API_KEY:-}
      - TRANSBANK_SECRET=${TRANSBANK_SECRET:-}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - andino-network
    volumes:
      - ./logs:/app/logs
      - ./certificates:/app/certificates:ro
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--quiet",
          "--tries=1",
          "--spider",
          "http://localhost:8080/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 45s
    labels:
      - "nginx.enable=true"
      - "nginx.server_name=andino.local"

  postgres:
    image: postgres:17.6-alpine3.22
    container_name: andino-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-andino}
      - POSTGRES_USER=${POSTGRES_USER:-andino}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-andino123}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=es_CL.UTF-8 --lc-ctype=es_CL.UTF-8
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/01-init.sql:ro
      - ./postgres.conf:/etc/postgresql/postgresql.conf:ro
    networks:
      - andino-network
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USER:-andino} -d ${POSTGRES_DB:-andino}",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    command: >
      postgres
      -c shared_preload_libraries=pg_stat_statements
      -c pg_stat_statements.track=all
      -c max_connections=200
      -c shared_buffers=256MB
      -c effective_cache_size=1GB
      -c maintenance_work_mem=64MB
      -c checkpoint_completion_target=0.7
      -c wal_buffers=16MB
      -c default_statistics_target=100

  redis:
    image: redis:8.2.1-alpine3.22
    container_name: andino-redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
    command: >
      redis-server
      --appendonly yes
      --appendfsync everysec
      --auto-aof-rewrite-percentage 100
      --auto-aof-rewrite-min-size 64mb
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru
      ${REDIS_PASSWORD:+--requirepass $REDIS_PASSWORD}
    volumes:
      - redis_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf:ro
    networks:
      - andino-network
    healthcheck:
      test:
        - CMD
        - redis-cli
        - ${REDIS_PASSWORD:+--no-auth-warning}
        - ${REDIS_PASSWORD:+-a}
        - ${REDIS_PASSWORD:-""}
        - ping
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

  swagger-ui:
    image: swaggerapi/swagger-ui:v5.20.0
    container_name: andino-swagger
    restart: unless-stopped
    ports:
      - "${SWAGGER_PORT:-8081}:8080"
    environment:
      - SWAGGER_JSON=/swagger/swagger.json
      - BASE_URL=/swagger
      - DEEP_LINKING=true
      - DISPLAY_OPERATION_ID=true
      - DEFAULT_MODELS_EXPAND_DEPTH=1
      - DEFAULT_MODEL_EXPAND_DEPTH=1
      - DEFAULT_MODEL_RENDERING=example
      - DISPLAY_REQUEST_DURATION=true
      - DOC_EXPANSION=none
      - FILTER=true
      - MAX_DISPLAYED_TAGS=10
      - SHOW_EXTENSIONS=true
      - SHOW_COMMON_EXTENSIONS=true
      - USE_UNSAFE_INLINE=true
    volumes:
      - ./../../docs/swagger.json:/swagger/swagger.json:ro
    networks:
      - andino-network
    labels:
      - "nginx.enable=true"
      - "nginx.server_name=docs.andino.local"

  pgadmin:
    image: dpage/pgadmin4:9.8.0
    container_name: andino-pgadmin
    restart: unless-stopped
    profiles:
      - tools
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL:-admin@andino.cl}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD:-admin123}
      - PGADMIN_CONFIG_SERVER_MODE=False
      - PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED=False
    ports:
      - "${PGADMIN_PORT:-8082}:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./pgadmin/servers.json:/pgadmin4/servers.json:ro
    networks:
      - andino-network
    depends_on:
      postgres:
        condition: service_healthy

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: andino-redis-ui
    restart: unless-stopped
    profiles:
      - tools

    environment:
      - REDIS_HOSTS=redis:redis:6379:0:${REDIS_PASSWORD:-}
      - HTTP_USER=${REDIS_UI_USER:-admin}
      - HTTP_PASSWORD=${REDIS_UI_PASSWORD:-admin123}

    ports:
      - "${REDIS_UI_PORT:-8083}:8081"

    networks:
      - andino-network

    depends_on:
      redis:
        condition: service_healthy

  # nginx:
  #   image: nginx:1.27.2-alpine3.20
  #   container_name: andino-nginx
  #   restart: unless-stopped
  #   profiles:
  #     - proxy
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
  #     - ./nginx/conf.d:/etc/nginx/conf.d:ro
  #     - ./nginx/ssl:/etc/nginx/ssl:ro
  #     - ./nginx/logs:/var/log/nginx
  #     - ./nginx/html:/usr/share/nginx/html:ro
  #   networks:
  #     - andino-network
  #   depends_on:
  #     - andino
  #     - swagger-ui
  #   healthcheck:
  #     test: ["CMD", "nginx", "-t"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  andino-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
